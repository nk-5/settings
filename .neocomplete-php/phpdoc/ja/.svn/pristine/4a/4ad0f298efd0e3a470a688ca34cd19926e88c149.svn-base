<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 336771 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
<refentry xml:id="function.func-get-arg" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>func_get_arg</refname>
  <refpurpose>引数のリストから要素をひとつ返す</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>func_get_arg</methodname>
   <methodparam><type>int</type><parameter>arg_num</parameter></methodparam>
  </methodsynopsis>
  <para>
   ユーザーが定義した関数の引数リストから、指定した引数を取得します。
  </para>
  <para>
   この関数は、
   <function>func_num_args</function>および
   <function>func_get_args</function>と組み合わせて使用され、これにより
   ユーザー定義の関数が可変長の引数リストをとることができるようになります。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>arg_num</parameter></term>
     <listitem>
      <para>
       引数の位置。関数の引数はゼロから数え始めます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   指定した引数、あるいはエラー時に &false; を返します。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        この関数はパラメータリスト内で使用できるようになりました。
       </entry>
      </row>
      <row>
       <entry>5.3.0</entry>
       <entry>
        ある関数内で <function>include</function> や
        <function>require</function> を使って別のファイルを読み込んでいるときに
        別のファイル側からこの関数をコールすると、警告を発生して
        &false; を返すようになりました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   ユーザー定義関数の外部からコールされた場合、あるいは
   <parameter>arg_num</parameter> が実際に渡された引数の数より多い場合に警告を発生します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>func_get_arg</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
function foo()
{
     $numargs = func_num_args();
     echo "引数の数は $numargs\n";
     if ($numargs >= 2) {
         echo "二番目の引数は " . func_get_arg(1) . " です。\n";
     }
}

foo(1, 2, 3);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
引数の数は 3
二番目の引数は 2 です。
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>func_get_arg</function> の PHP 5.3 前後の例</title>
    <programlisting role="php">
<![CDATA[
test.php
<?php
function foo() {
    include './fga.inc';
}

foo('First arg', 'Second arg');
?>

fga.inc
<?php

$arg = func_get_arg(1);
var_export($arg);

?>
]]>
    </programlisting>
    <para>
     PHP 5.3 より前のバージョンでの出力は、このようになります。
    </para>
    <screen>
<![CDATA[
'Second arg'
]]>
    </screen>
    <para>
     PHP 5.3 以降のバージョンでの出力は、このようになります。
    </para>
    <screen>
<![CDATA[
Warning: func_get_arg():  Called from the global scope - no function
context in /home/torben/Desktop/code/ml/fga.inc on line 3
false
]]>
    </screen>
   </example>
  </para>

  <para>
   <example>
    <title><function>func_get_arg</function> での引数の参照渡しと値渡しの例</title>
    <programlisting role="php">
<![CDATA[
<?php
function byVal($arg) {
    echo 'As passed     : ', var_export(func_get_arg(0)), PHP_EOL;
    $arg = 'baz';
    echo 'After change  : ', var_export(func_get_arg(0)), PHP_EOL;
}

function byRef(&$arg) {
    echo 'As passed     : ', var_export(func_get_arg(0)), PHP_EOL;
    $arg = 'baz';
    echo 'After change  : ', var_export(func_get_arg(0)), PHP_EOL;
}

$arg = 'bar';
byVal($arg);
byRef($arg);
?>
]]>
    </programlisting>
     &example.outputs;
    <screen>
As passed     : 'bar'
After change  : 'bar'
As passed     : 'bar'
After change  : 'baz'
    </screen>
   </example>
  </para>

 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.funcnoparam;
  &note.funcbyref;
  <note>
   <simpara>
    この関数は、渡された引数のみのコピーを返します。
    デフォルトの (渡されていない) 引数については感知しません。
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>PHP 5.6 以降の <link linkend="functions.variable-arg-list.new"><literal>...</literal> 構文</link></member>
    <member><function>func_get_args</function></member>
    <member><function>func_num_args</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
