<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297078 Maintainer: takagi Status: ready -->
 <sect1 xml:id="internals2.buildsys.environment" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>拡張モジュール開発用に PHP をビルドする方法</title>
  <para>
   PHP を普通にインストールすると、
   デバッグ機能よりもパフォーマンスの向上に主眼を置いて最適化された設定になります。
   実際に運用することを考えると、これは妥当な選択でしょう。
   しかし、拡張モジュールを開発する環境としてはあまりよくありません。
   何か問題がおこったときに、どこが悪いのかを調べやすくするように
   PHP をビルドする必要があります。
  </para>
  
  <para>
   Zend Engine ではメモリマネージャが提供されており、
   拡張モジュール内で発生したメモリリークを追跡することができます。
   また、詳細なデバッグ情報を取得することもできます。
   しかし、この機能はデフォルトでは無効になっており、
   スレッドセーフであることを優先しています。
   この機能を使うには、<filename>configure</filename> のオプションに
   <option role="configure">--enable-debug</option> と
   <literal>--enable-maintainer-zts</literal> を追加します。
   PHP をソースからビルドする方法については
   <xref linkend="install.general"/>
   の説明を参照ください。典型的な
   <filename>configure</filename> の設定は次のようになります。
   <programlisting role="shell">
<![CDATA[
$ ./configure --prefix=/where/to/install/php --enable-debug --enable-maintainer-zts --enable-cgi --enable-cli --with-mysql=/path/to/mysql
]]>
   </programlisting>
  </para>
 </sect1>

<!-- Write this later?  
 <sect1 xml:id="internals2.buildsys.environment.parallel">
  <title>Running debug and production PHP builds in parallel</title>
 </sect1>
-->

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
