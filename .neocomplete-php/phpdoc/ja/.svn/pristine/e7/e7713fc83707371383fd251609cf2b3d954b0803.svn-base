<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: takagi Status: ready -->
<refentry xml:id="internals2.ze1.zendapi.macros.zend-strl" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ZEND_STRL</refname>
  <refpurpose>文字列のポインタとその長さを一度に渡す</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;      
  <literallayout>#include &lt;zend.h&gt;</literallayout>
  <methodsynopsis>
   <void/><methodname>ZEND_STRL</methodname>
    <methodparam><type>char *</type><parameter>str</parameter></methodparam>
  </methodsynopsis>
  <para>
   これは、文字列とその長さの両方を要する関数に静的な文字列を渡す際に使用できる便利なマクロです。
   同じ文字列を何度もソースコードに記述したり、
   新たな変数を用意したりする手間が省けます。
  </para>
  <example>
   <title><function>ZEND_STRL</function> の例</title>
   <programlisting>
<![CDATA[

write(0, ZEND_STRL("Hello World!"));
/* これは、以下と同じ意味です
char str[] = "Hello World!";
write(0, str, sizeof(str)-1);  
*/

]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       ゼロ終端の文字列へのポインタ。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
