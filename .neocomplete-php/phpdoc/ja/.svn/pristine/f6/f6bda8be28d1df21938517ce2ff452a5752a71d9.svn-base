<?xml version='1.0' encoding='utf-8'?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: takagi Status: ready -->
<sect1 xml:id="internals2.pdo.pdo-stmt-t" xmlns="http://docbook.org/ns/docbook">
 <title>pdo_stmt_t の定義</title>
 <para>
  明示的に述べられている場合を除き、ドライバからはすべてのフィールドが
  読み込み専用となります。
 </para>
 <figure>
  <title>pdo_stmt_t</title>
  <programlisting role="c">
/* プリペアドステートメントを表す */
struct _pdo_stmt_t {
    /* ドライバ固有 */
    struct pdo_stmt_methods *methods;   <co xml:id="internals2.pdo.stmt.co.methods" linkends="internals2.pdo.stmt.co.methods-co"/>
    void *driver_data;                  <co
    xml:id="internals2.pdo.stmt.co.driver-data"
    linkends="internals2.pdo.stmt.co.driver-data-co"/>

    /* true の場合は、すくなくとも 1 回はこのステートメントの実行に
     * 成功していることを表す */
    unsigned executed:1;                <co
    xml:id="internals2.pdo.stmt.co.executed"
    linkends="internals2.pdo.stmt.co.executed-co"/>
    /* true の場合は、ステートメントがプレースホルダをサポートしており
     * プリペアドステートメント用に bindParam() を実装できることを表す
     * false の場合は、プリペアおよびバインドを PDO がエミュレートする
     * 必要があることを表す */
    unsigned supports_placeholders:2;   <co xml:id="internals2.pdo.stmt.co.holder"
    linkends="internals2.pdo.stmt.co.holder-co"/>

    /* 結果セットのカラム数。ステートメントがすくなくとも 1 度実行される
     * までは有効な値は設定されない。時には、(ドライバレベルでの)
     * フェッチがコールされるまでは有効にならないこともある。
     * */
    int column_count;                   <co
    xml:id="internals2.pdo.stmt.co.colcount"
    linkends="internals2.pdo.stmt.co.colcount-co"/>
    struct pdo_column_data *columns;    <co
    xml:id="internals2.pdo.stmt.co.cols" linkends="internals2.pdo.stmt.co.cols-co"/>

    /* このステートメントが準備された dbh を指す */
    pdo_dbh_t *dbh;

    /* 入力バインドパラメータを指す。ドライバの中には入出力パラメータを
     * サポートしているものもあるが、その動作に依存することはできない */
    HashTable *bound_params;
    /* 名前から位置への置き換えを行う際に、このマップを使用する */
    HashTable *bound_param_map; 
    /* 結果セット内で名前で指定した (あるいは位置で指定した) カラムに
     * 関連付けた PHP 変数を指す */
    HashTable *bound_columns;

    /* 意味のある値が設定されていない場合もある */
    long row_count;

    /* ステートメントの現在のクエリを保持する */
    char *query_string;
    int query_stringlen;

    /* バインド変数を展開した後のクエリのコピーで、
     * ドライバがプリペアドステートメントをエミュレートしている
     * 場合にのみ使用する */
    char *active_query_string;
    int active_query_stringlen;

    /* カーソル固有のエラーコード */
    pdo_error_type error_code;

    /* ドライバ固有のパラメータ命名規則 (例: pgsql ドライバ)
     * のためにクエリパーサが使用する */
    const char *named_rewrite_template;
};
  </programlisting>
 </figure>
 <calloutlist>
  <callout xml:id="internals2.pdo.stmt.co.methods-co"
   arearefs="internals2.pdo.stmt.co.methods">
   <para>
    ドライバは、<function>SKEL_handle_preparer</function> の中で
    これを設定<emphasis>しなければなりません</emphasis>。
   </para>
  </callout>
  <callout arearefs="internals2.pdo.stmt.co.driver-data"
   xml:id="internals2.pdo.stmt.co.driver-data-co">
   <para>
    この項目はドライバが使用します。想定される使用法は、データベースとの
    接続を保つために必要なインスタンスデータへのポインタを
    (<function>SKEL_handle_factory</function> 内で)
    格納することです。
   </para>
  </callout>
  <callout arearefs="internals2.pdo.stmt.co.executed"
   xml:id="internals2.pdo.stmt.co.executed-co">
   <para>
    ステートメントが最初に実行された後に、PDO がこれを設定します。
    ドライバは、この値を調べることで初回にのみ必要な処理を飛ばす
    最適化を行います。
   </para>
  </callout>
  <callout arearefs="internals2.pdo.stmt.co.holder"
   xml:id="internals2.pdo.stmt.co.holder-co">
   <para>
    詳細は <xref linkend="internals2.pdo.preparer"/> で説明します。
   </para>
  </callout>
  <callout arearefs="internals2.pdo.stmt.co.colcount"
   xml:id="internals2.pdo.stmt.co.colcount-co">
   <para>
    結果セット内のカラム数を、ドライバがこのフィールドに設定します。
    通常これは <function>SKEL_stmt_execute</function> で設定しますが、
    データベースの実装によっては <function>SKEL_stmt_fetch</function>
    を最低 1 回コールするまではカラム数がわからないことがあります。
    <function>SKEL_stmt_next_rowset</function> を実装するドライバで
    新しい行セットが使用可能になった場合、ドライバはカラム数を更新する必要があります。
   </para>
  </callout>
  <callout arearefs="internals2.pdo.stmt.co.cols"
   xml:id="internals2.pdo.stmt.co.cols-co">
   <para>
    カラム数に設定した値に応じて、PDO がこのフィールドを確保します。
    <function>SKEL_stmt_describe</function> の中で、各カラムの内容を
    設定する必要があります。各カラムについて設定する必要があるのは、
    <parameter>precision</parameter>、<parameter>maxlen</parameter>、
    <parameter>name</parameter>、<parameter>namelen</parameter> および
    <parameter>param_type</parameter> です。
    <parameter>name</parameter> は、<function>emalloc</function>
    を使用して確保することが期待されています。PDO は、しかるべき時に
    <function>efree</function> を実行します。
   </para>
  </callout>
 </calloutlist>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
