<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297078 Maintainer: takagi Status: ready -->
 <sect2 xml:id="internals2.ze1.zendapi.ini-file-support" xmlns="http://docbook.org/ns/docbook"> 
  <title>ini ファイルのサポート</title> 
  <para>
   PHP 4 では ini ファイルのサポートが設計しなおされています。
   デフォルトの初期エントリをコード中で直接指定したり、
   それらの値を実行時に読み込んで変更したり、
   変更があったことを通知するためのメッセージハンドラを作成したりすることができます。
  </para> 
  <para>
   あなたのモジュール用の .ini セクションを作成するには、
   <literal>PHP_INI_BEGIN()</literal> マクロでセクションの開始位置を指定、
   <literal>PHP_INI_END()</literal> マクロでセクションを終了位置を指定して、
   その中に <literal>PHP_INI_ENTRY()</literal> を使用してエントリを作成します。
   <programlisting role="c">
<![CDATA[
PHP_INI_BEGIN()
PHP_INI_ENTRY("first_ini_entry",  "has_string_value", PHP_INI_ALL, NULL)
PHP_INI_ENTRY("second_ini_entry", "2",                PHP_INI_SYSTEM, OnChangeSecond)
PHP_INI_ENTRY("third_ini_entry",  "xyz",              PHP_INI_USER, NULL)
PHP_INI_END()
]]>
   </programlisting>
   <literal>PHP_INI_ENTRY()</literal> マクロは 4 つのパラメータを受け取ります。
   パラメータの内容は、それぞれエントリ名、エントリの値、変更の権限、
   そして変更通知ハンドラへのポインタとなります。
   エントリ名とエントリの値は、たとえ実際の値が整数であったとしても
   文字列で指定しなければなりません。
  </para> 
  <para>
   権限は、3 種類に分けられます。
   <literal>PHP_INI_SYSTEM</literal> は <filename>php.ini</filename>
   ファイルでしか変更できません。<literal>PHP_INI_USER</literal>
   は、実行時にユーザーが設定を上書きすることができます。上書きするには
   <filename>.htaccess</filename> のような別の設定ファイルを使用します。
   そして <literal>PHP_INI_ALL</literal> の場合は無制限に値を変更することができます。
   4 種類目として <literal>PHP_INI_PERDIR</literal> というものもありますが、
   この振る舞いについては検証することができません。
   yet.
  </para> 
  <para>
   4 番目のパラメータには、変更通知ハンドラへのポインタを指定します。
   これらの ini エントリが変更された際に、ハンドラがコールされます。
   ハンドラを宣言するには、<literal>PHP_INI_MH</literal> マクロを使用します。
   <programlisting role="c">
<![CDATA[
PHP_INI_MH(OnChangeSecond);             // ini エントリ "second_ini_entry" 用のハンドラ

// ここで ini エントリを指定します

PHP_INI_MH(OnChangeSecond)
{

    zend_printf("Message caught, our ini entry has been changed to %s&lt;br&gt;", new_value);

    return(SUCCESS);

}
]]>
   </programlisting>
   変更ハンドラの変数 <envar>new_value</envar> に、
   新しい値がに文字列として渡されます。
   <literal>PHP_INI_MH</literal> の定義を見ると、
   それ以外にもいくつかのパラメータがあることがわかるでしょう。
   <programlisting role="c">
<![CDATA[
#define PHP_INI_MH(name) int name(php_ini_entry *entry, char *new_value,
                                  uint new_value_length, void *mh_arg1,
                                  void *mh_arg2, void *mh_arg3)
]]>
   </programlisting>
   これらの定義は <filename>php_ini.h</filename> で確認できます。
   メッセージハンドラの内部では、エントリ全体を含む構造体・
   新しい値・その長さ・そして 3 つのオプションの引数にアクセスすることができます。
   3 つのオプションの引数を指定するには、
   <literal>PHP_INI_ENTRY1</literal> (追加の引数を 1 つ指定する)、
   <literal>PHP_INI_ENTRY2</literal> (追加の引数を 2 つ指定する)
   そして <literal>PHP_INI_ENTRY3</literal> (追加の引数を 3 つ指定する)
   のそれぞれのマクロを使用します。
  </para> 
  <para>
   変更通知ハンドラを使用すべき場面としては以下のようなものがあります。
   高速にアクセスするために ini エントリをローカルにキャッシュしたり、
   値が変更された際に何らかのタスクを実行したりといった場合です。
   例えば、特定のホストと常に接続を確率している拡張モジュールにおいて
   ホスト名が変更された場合に、今の接続を自動的に終了させて
   新しい接続を確率するなどといったものが考えられます。
  </para> 
  <para>
   <xref linkend="internals2.ze1.zendapi.table.ini-macros"/>
   に示すマクロを使用することによっても、
   ini エントリへのアクセスは可能です。
  </para> 
  <table xml:id="internals2.ze1.zendapi.table.ini-macros">
   <title>PHP の ini エントリにアクセスするためのマクロ</title> 
    <tgroup cols="2">
     <colspec colnum="1" colname="col1" colwidth="1.00*"/>
     <colspec colnum="2" colname="col2" colwidth="1.66*"/> 
     <tbody> 
      <row> 
       <entry colname="col1">マクロ</entry> 
       <entry colname="col2">説明</entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>INI_INT(name)</literal></entry> 
       <entry colname="col2">
        エントリ <literal>name</literal> の現在の値を
        integer (long) で返します。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>INI_FLT(name)</literal></entry> 
       <entry colname="col2">
        エントリ <literal>name</literal> の現在の値を
        float (double) で返します。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>INI_STR(name)</literal></entry> 
       <entry colname="col2">
        エントリ <literal>name</literal> の現在の値を文字列で返します。
        <emphasis>注意:</emphasis> 文字列は複製されず、
        内部データへのポインタが返されます。後でこのデータにアクセスするには、
        ローカルメモリに複製しなければなりません。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>INI_BOOL(name)</literal></entry> 
       <entry colname="col2">
        エントリ <literal>name</literal> の現在の値を
        Boolean (<envar>zend_bool</envar> で定義されるもので、
        その実体は、現在は <envar>unsigned char</envar>) で返します。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>INI_ORIG_INT(name)</literal></entry> 
       <entry colname="col2">
        エントリ <literal>name</literal> の元の値を
        integer (long) で返します。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>INI_ORIG_FLT(name)</literal></entry> 
       <entry colname="col2">
        エントリ <literal>name</literal> の元の値を
        float (double) で返します。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>INI_ORIG_STR(name)</literal></entry> 
       <entry colname="col2">
        エントリ <literal>name</literal> の元の値を文字列で返します。
        <emphasis>注意:</emphasis> 文字列は複製されず、
        内部データへのポインタが返されます。後でこのデータにアクセスするには、
        ローカルメモリに複製しなければなりません。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>INI_ORIG_BOOL(name)</literal></entry> 
       <entry colname="col2">
        エントリ <literal>name</literal> の元の値を
        Boolean (<envar>zend_bool</envar> で定義されるもので、
        その実体は、現在は <envar>unsigned char</envar>) で返します。
       </entry> 
      </row> 
     </tbody> 
    </tgroup> 
  </table> 
  <para>
   最後に、あなたが作成した ini エントリについて PHP に教えてあげなければなりません。
   モジュールのスタートアップ関数およびシャットダウン関数の中で、マクロ
   <literal>REGISTER_INI_ENTRIES()</literal> および <literal>UNREGISTER_INI_ENTRIES()</literal>
   を使用します。
   <programlisting role="c">
<![CDATA[
ZEND_MINIT_FUNCTION(mymodule)
{

    REGISTER_INI_ENTRIES();

}

ZEND_MSHUTDOWN_FUNCTION(mymodule)
{

    UNREGISTER_INI_ENTRIES();

}
]]>
   </programlisting>
  </para> 
 </sect2> 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
