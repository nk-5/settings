<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 304501 Maintainer: takagi Status: ready -->
<article xml:id="xml.eventhandlers" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>イベントハンドラ</title>
 <para>
  XML イベントハンドラは次のように定義されます。
  <table>
   <title>サポートされる XML ハンドラ</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>ハンドラ設定用の PHP 関数</entry>
      <entry>イベントの説明</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><function>xml_set_element_handler</function></entry>
      <entry>
       要素イベントは、XML パーサーが開始または終了タグに出会うたび
       に発行されます。開始タグと終了タグについて別のハンドラがあり
       ます。
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_character_data_handler</function>
      </entry>
      <entry>
       文字データは、タグの間の空白を含めて XML ドキュメントにおけ
       るほぼ全ての非マークアップ部分の内容です。XML パーサーは、
       空白を加えたり削除したりしないことに注意してください。空白が
       意味を有するかどうかを決めるのは、アプリケーション側の責任
       です。
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_processing_instruction_handler</function>
      </entry>
      <entry>
       PHP プログラマは、既に処理用命令 (PI) に既に慣れているに違
       いありません。&lt;?php ?&gt; は処理用命令であり、この場合、
       <replaceable>php</replaceable> は "PI ターゲット"と呼ばれます。
       これらの処理はアプリケーション依存ですが、全ての PI ターゲッ
       トが "XML" から始まることだけは、規定されています。
      </entry>
     </row>
     <row>
      <entry><function>xml_set_default_handler</function></entry>
      <entry>
       別のハンドラでしないことをデフォルトのハンドラで行います。
       XML およびドキュメント型の宣言のようなことをデフォルトハンドラで
       行います。
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_unparsed_entity_decl_handler</function>
      </entry>
      <entry>
       このハンドラは、処理されない (NDATA) エンティティの宣言用に
       コールされます。
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_notation_decl_handler</function>
      </entry>
      <entry>
       このハンドラは、表記の宣言用にコールされます。
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_external_entity_ref_handler</function>
      </entry>
      <entry>
       このハンドラは、XML パーサーが外部処理された通常のエンティティ
       への参照を見つけた際にコールされます。これは、例えば、ファ
       イルまたは URL への参照とすることが可能です。例としては、
       <link linkend="example.xml-external-entity">外部エンティティ
       の例</link> を参照ください。
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_start_namespace_decl_handler</function>
      </entry>
      <entry>
       このハンドラは、名前空間宣言の開始時にコールされます。
      </entry>
     </row>
     <row>
      <entry>
       <function>xml_set_end_namespace_decl_handler</function>
      </entry>
      <entry>
       このハンドラは、名前空間宣言の終了時にコールされます。このイベントは
       LibXML では発生 <emphasis>しない</emphasis> ことに注意しましょう。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </para>
</article>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

