<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333317 Maintainer: takagi Status: ready -->
<refentry xml:id="rarentry.extract" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>RarEntry::extract</refname>
  <refpurpose>アーカイブのエントリを展開する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
    <modifier>public</modifier> <type>bool</type><methodname>RarEntry::extract</methodname>
    <methodparam><type>string</type><parameter>dir</parameter></methodparam>
    <methodparam choice="opt"><type>string</type><parameter>filepath</parameter><initializer>""</initializer></methodparam>
    <methodparam choice="opt"><type>string</type><parameter>password</parameter><initializer>NULL</initializer></methodparam>
    <methodparam choice="opt"><type>bool</type><parameter>extended_data</parameter><initializer>false</initializer></methodparam>
   </methodsynopsis>
  <para>
   <methodname>RarEntry::extract</methodname> は、エントリのデータを展開します。
   二番目の引数が指定されていなければ、
   指定した <parameter>dir</parameter> にエントリの名前と同名の新しいファイルを作成します。
   詳細は以下を参照ください。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dir</parameter></term>
     <listitem>
      <para>
       ファイルを展開するディレクトリへのパス。
       このパラメータが考慮されるのは <parameter>filepath</parameter>
       が指定されていないときだけです。両方のパラメータが空の場合は、
       カレントディレクトリへの展開を試みます。
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term><parameter>filepath</parameter></term>
     <listitem>
      <para>
       取り出すファイルのディレクトリとファイル名を含むパス (相対パスあるいは絶対パス)。
       このパラメータは、<parameter>dir</parameter>
       の内容と元のファイル名を両方とも上書きします。
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       このエントリの暗号化に使うパスワード。
       エントリが暗号化されていない場合は、この値は使われずに無視されます。
       このパラメータが省略されていてエントリが暗号化されていた場合は、もし
       <function>rar_open</function> でパスワードを指定していればそれを使います。
       このパラメータや <function>rar_open</function> で指定したパスワードが間違っていたときは、
       CRC チェックが失敗してこのメソッドが失敗し、&false; を返します。
       パスワードが要求されているときにパスワードを指定していなければ、
       このメソッドは失敗して &false; を返します。
       エントリが暗号化されているかどうかを知るには <methodname>RarEntry::isEncrypted</methodname>
       を使います。
      </para>
     </listitem>
    </varlistentry>

   <varlistentry>
    <term><parameter>extended_data</parameter></term>
    <listitem>
     <para>
       &true; にすると、NTFS の ACL や Unix のオーナー情報といった拡張情報が
       アーカイブに設定されていれば、取り出したファイルにもそれを設定します。
     </para>
    </listitem>
   </varlistentry>
   </variablelist>
  </para>
  <warning>
      <para>バージョン 2.0.0 より前は、この関数では相対パスを正しく扱えません。
      回避策として <function>realpath</function> を使いましょう。</para>
  </warning>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>3.0.0</entry>
       <entry>
        <parameter>extended_data</parameter> が追加されました。
       </entry>
      </row>
      <row>
       <entry>3.0.0</entry>
       <entry>
        エントリ名が繰り返される RAR アーカイブも対応するようになりました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><methodname>RarEntry::extract</methodname> の例</title>
    <programlisting role="php">
<![CDATA[
<?php

$rar_file = rar_open('example.rar') or die("Rar アーカイブのオープンに失敗しました");

$entry = rar_entry_get($rar_file, 'Dir/file.txt') or die("そのようなエントリは見つかりません");

$entry->extract('/dir/to'); // /dir/to/Dir/file.txt を作成します
$entry->extract(false, '/dir/to/new_name.txt'); // /dir/to/new_name.txt を作成します

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>アーカイブ内のすべてのファイルを展開する方法</title>
    <programlisting role="php">
<![CDATA[
<?php

/* erix こと Erik Jenssen によるサンプルです */

$filename = "foobar.rar";
$filepath = "/home/foo/bar/";

$rar_file = rar_open($filepath.$filename);
$list = rar_list($rar_file);
foreach($list as $file) {
    $entry = rar_entry_get($rar_file, $file);
    $entry->extract("."); // カレントディレクトリに展開します
}
rar_close($rar_file);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>RarEntry::getStream</methodname></member>
    <member><link linkend="wrappers.rar"><literal>rar://</literal> wrapper</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
