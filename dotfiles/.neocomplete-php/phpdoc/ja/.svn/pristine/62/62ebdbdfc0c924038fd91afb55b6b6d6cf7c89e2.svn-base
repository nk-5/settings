<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297078 Maintainer: takagi Status: ready -->
 <sect2 xml:id="internals2.ze1.zendapi.returning" xmlns="http://docbook.org/ns/docbook"> 
  <title>値を返す</title> 
  <para>
   あなたの関数から PHP に値を返す方法については、既に簡単に説明しました。
   ここではより詳細に説明します。返り値は <envar>return_value</envar>
   変数を用いて渡されます。この変数は関数の引数として渡されたものです。
   <envar>return_value</envar> 引数は <envar>zval</envar> コンテナで構成されており
   (前の章の呼び出しインターフェイスのところを参照ください)、
   自由に変更することができます。コンテナ自身はすでに割り当て済みなので、
   改めて <literal>MAKE_STD_ZVAL</literal> を実行する必要はありません。
   その内容に直接アクセスすることが可能です。
  </para> 
  <para>
   関数から返す値を作成しやすくするため、そして <envar>zval</envar>
   コンテナの内部構造にアクセスしやすくするために、
   いくつかのマクロが定義されています。
   <xref linkend="internals2.ze1.zendapi.tab.return"/>
   および <xref linkend="internals2.ze1.zendapi.tab.retval"/>
   にまとめたこれらのマクロは、対応する型と値を自動的に設定します。
  </para> 
  <note>
   <para>
    <xref linkend="internals2.ze1.zendapi.tab.return"/> のマクロは、自動的に関数から値を
    <emphasis>return</emphasis> します。一方
    <xref linkend="internals2.ze1.zendapi.tab.retval"/> のマクロは単に値を
    <emphasis>設定する</emphasis> だけです。関数から値を返すことはありません。
   </para>
  </note> 
  <table xml:id="internals2.ze1.zendapi.tab.return">
   <title>関数から値を返すための、定義済みマクロ</title> 
    <tgroup cols="2">
     <colspec colnum="1" colname="col1" colwidth="*"/>
     <colspec colnum="2" colname="col2" colwidth="*"/> 
     <tbody> 
      <row> 
       <entry colname="col1">マクロ</entry> 
       <entry colname="col2">説明</entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETURN_RESOURCE(resource)</literal></entry> 
       <entry colname="col2">リソースを返します。</entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETURN_BOOL(bool)</literal></entry> 
       <entry colname="col2">Boolean を返します。</entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETURN_NULL()</literal></entry> 
       <entry colname="col2">何も返しません (NULL 値を返します)。</entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETURN_LONG(long)</literal></entry> 
       <entry colname="col2">long を返します。</entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETURN_DOUBLE(double)</literal></entry> 
       <entry colname="col2">double を返します。</entry> 
      </row> 
      <row> 
       <entry colname="col1">
        <literal>RETURN_STRING(string, duplicate)</literal>
       </entry> 
       <entry colname="col2">
        文字列を返します。<envar>duplicate</envar> フラグでは、
        <function>estrdup</function> を使用して文字列を複製するかどうかを指定します。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1">
        <literal>RETURN_STRINGL(string, length, duplicate)</literal>
       </entry> 
       <entry colname="col2">
        指定した長さの文字列を返します。それ以外の振る舞いは
        <literal>RETURN_STRING</literal> と同じです。
        しかし、このマクロは高速でバイナリセーフです。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETURN_EMPTY_STRING()</literal></entry> 
       <entry colname="col2">空の文字列を返します。</entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETURN_FALSE</literal></entry> 
       <entry colname="col2">false を返します。</entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETURN_TRUE</literal></entry> 
       <entry colname="col2">true を返します。</entry> 
      </row> 
     </tbody> 
    </tgroup>  
  </table> 
  <table xml:id="internals2.ze1.zendapi.tab.retval">
   <title>関数の返り値を設定するための、定義済みマクロ</title> 
    <tgroup cols="2">
     <colspec colnum="1" colname="col1" colwidth="*"/>
     <colspec colnum="2" colname="col2" colwidth="*"/> 
     <tbody> 
      <row> 
       <entry colname="col1">マクロ</entry> 
       <entry colname="col2">説明</entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETVAL_RESOURCE(resource)</literal></entry> 
       <entry colname="col2">指定したリソースを返り値に設定します。</entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETVAL_BOOL(bool)</literal></entry> 
       <entry colname="col2">指定した Boolean 値を返り値に設定します。</entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETVAL_NULL</literal></entry> 
       <entry colname="col2">NULL を返り値に設定します。</entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETVAL_LONG(long)</literal></entry> 
       <entry colname="col2">
        指定した long 値に返り値を設定します。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETVAL_DOUBLE(double)</literal></entry> 
       <entry colname="col2">
        指定した double 値に返り値を設定します。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1">
        <literal>RETVAL_STRING(string, duplicate)</literal>
       </entry> 
       <entry colname="col2">
        指定した文字列に返り値を設定します。必要に応じて
        Zend 内部メモリに文字列をコピーします
        (<literal>RETURN_STRING</literal> も参照ください)。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1">
        <literal>RETVAL_STRINGL(string, length, duplicate)</literal>
       </entry> 
       <entry colname="col2">
        指定した文字列を返り値に指定し、その長さが
        <envar>length</envar> となるようにします
        (<literal>RETVAL_STRING</literal> も参照ください)。
        このマクロは高速でバイナリセーフです。
        文字列の長さがわかっている場合は常にこのマクロを使用すべきです。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1">
        <literal>RETVAL_EMPTY_STRING</literal>
       </entry> 
       <entry colname="col2">
        空の文字列を返り値に指定します。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETVAL_FALSE</literal></entry> 
       <entry colname="col2">
        false を返り値に指定します。
       </entry> 
      </row> 
      <row> 
       <entry colname="col1"><literal>RETVAL_TRUE</literal></entry> 
       <entry colname="col2">
        true を返り値に指定します。
       </entry> 
      </row> 
     </tbody> 
    </tgroup> 
  </table> 
  <para>
   配列やオブジェクトのような複雑な型を返すには
   <function>array_init</function> および
   <function>object_init</function> を使用し、対応するハッシュ関数を
   <envar>return_value</envar> に使用します。
   これらの型は簡単に作成することはできないので、定義済みのマクロは存在しません。
  </para> 
 </sect2>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
