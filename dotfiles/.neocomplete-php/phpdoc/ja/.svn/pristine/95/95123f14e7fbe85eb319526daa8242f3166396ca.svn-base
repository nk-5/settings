<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333500 Maintainer: takagi Status: ready -->
<!-- CREDITS: hirokawa,shimooka -->
<sect1 xml:id="language.types.boolean">
 <title>論理型 (boolean) </title>
 
 <simpara>
  論理型は、最も簡単な型です。<type>boolean</type> は、真偽の値を表します。
  この値は、&true; または &false; のどちらかになります。
 </simpara>

 <sect2 xml:id="language.types.boolean.syntax">
  <title>構文</title>
  <para>
   boolean リテラルを指定するには、定数 &true;
   または &false; を指定してください。
   両方とも大文字小文字に依存しません。
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$foo = True; // 値TRUEを$fooに代入する
?>
]]>
   </programlisting>
  </informalexample>

  <para>
   通常、<type>boolean</type> 型の値を返す<link
   linkend="language.operators">演算子</link>を使用してから、
   <link linkend="language.control-structures">制御構造</link>にその結果を渡します。
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
// == は、boolean型を返す演算子
if ($action == "show_version") {
    echo "バージョンは1.23です。";
}

// これは冗長
if ($show_separators == TRUE) {
    echo "<hr>\n";
}

// 上の例は次のように簡単に書くことができます。
if ($show_separators) {
    echo "<hr>\n";
}
?>
]]>
   </programlisting>
  </informalexample>
 </sect2>

 <sect2 xml:id="language.types.boolean.casting">
  <title>boolean への変換</title>

  <simpara>
   <type>boolean</type> に明示的に変換を行うには、キャスト
   <literal>(bool)</literal> または <literal>(boolean)</literal>
   を使用します。しかし、演算子、関数、制御構造が <type>boolean</type>
   型の引数を必要とする場合には、値は自動的に変換されるため、
   多くの場合はキャストは不要です。
  </simpara>

  <simpara>
   <link linkend="language.types.type-juggling">型の相互変換</link>
   も参照ください。
  </simpara>
   
  <para>
   <type>boolean</type> に変換する場合、次の値は &false; とみなされます。
  </para>
  
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="language.types.boolean">boolean</link> の
     &false;
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="language.types.integer">integer</link> の 0 (ゼロ)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="language.types.float">float</link> の
     0.0 (ゼロ)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     空の<link linkend="language.types.string">文字列</link>、
     および<link linkend="language.types.string">文字列</link>の
     "0"
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     要素の数がゼロである <link linkend="language.types.array">配列</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     メンバ変数の数がゼロである <link linkend="language.types.object">オブジェクト</link> (PHP 4のみ)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     特別な値 <link linkend="language.types.null">NULL</link>
     (値がセットされていない変数を含む)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     空のタグから作成された <link linkend="ref.simplexml">SimpleXML</link>
     オブジェクト
    </simpara>
   </listitem>
  </itemizedlist>
    
  <para>
   その他の値は全て &true; とみなされます (全ての
   <link linkend="language.types.resource">resource</link>を含みます)。
  </para>
  
  <warning>
   <simpara>
    <literal>-1</literal> は、他のゼロでない数と同様に (正負によらず)
    &true; とみなされます。
   </simpara>
  </warning>
  
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
var_dump((bool) "");        // bool(false)
var_dump((bool) 1);         // bool(true)
var_dump((bool) -2);        // bool(true)
var_dump((bool) "foo");     // bool(true)
var_dump((bool) 2.3e5);     // bool(true)
var_dump((bool) array(12)); // bool(true)
var_dump((bool) array());   // bool(false)
var_dump((bool) "false");   // bool(true)
?>
]]>
   </programlisting>
  </informalexample>

 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
